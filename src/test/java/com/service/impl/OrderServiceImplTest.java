package com.sell.service.impl;import com.sell.dataTransferObject.OrderDTO;import com.sell.dataobject.OrderDetail;import com.sell.enums.OrderStatusEnum;import com.sell.service.impl.OrderServiceImpl;import org.junit.Assert;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.test.context.junit4.SpringRunner;import java.util.ArrayList;import java.util.List;@RunWith(SpringRunner.class)@SpringBootTestpublic class OrderServiceImplTest {    @Autowired    private OrderServiceImpl service;    private final String ORDER_ID = "1532935528806175484";    private final String OPEN_ID = "udkghswjrndke33vdf";    @Test    public void create() {        OrderDTO orderDTO = new OrderDTO();        orderDTO.setBuyerName("叶子");        orderDTO.setBuyerAddress("深圳");        orderDTO.setBuyerPhone("13425144866");        orderDTO.setBuyerOpenid("udkghswjrndke33vdf");        //购物车        List<OrderDetail> cartDTOS = new ArrayList<>();        OrderDetail orderDetail1 = new OrderDetail();        orderDetail1.setProductId("0001");        orderDetail1.setProductQuantity(2);        OrderDetail orderDetail2 = new OrderDetail();        orderDetail2.setProductId("0002");        orderDetail2.setProductQuantity(2);        cartDTOS.add(orderDetail1);        cartDTOS.add(orderDetail2);        orderDTO.setOrderDetails(cartDTOS);        OrderDTO result = service.create(orderDTO);        Assert.assertNotNull(result);    }    @Test    public void findById() {        OrderDTO orderDTO = service.findById(ORDER_ID);        Assert.assertNotNull(orderDTO);        Assert.assertNotNull(orderDTO.getOrderDetails().size());    }    @Test    public void findList() {        PageRequest pageRequest = new PageRequest(0,5);        Page<OrderDTO> orderDTOPage = service.findList(OPEN_ID,pageRequest);        Assert.assertNotEquals(0,orderDTOPage.getTotalElements());    }    @Test    public void cancel() {        OrderDTO orderDTO = service.findById(ORDER_ID);        OrderDTO result = service.cancel(orderDTO);        Assert.assertEquals(OrderStatusEnum.CANCEL.getCode(),result.getOrderStatus());    }    @Test    public void finish() {    }    @Test    public void pay() {    }}